AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  AWS CloudFormation template for Boundary Dynamic Hosts tutorial. Deploying
  this template will incur costs to your AWS account.
Parameters:
  KeyName:
    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: boundary-keypair
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp:
            Ref: SSHLocation
  EC2Instance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName:
        Ref: KeyName
      InstanceType: t3.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      AvailabilityZone: us-east-1a
      ImageId: ami-0a0d7666aecd99093
      Tags:
        - Key: Name
          Value: boundary-1-dev
        - Key: service-type
          Value: database
        - Key: application
          Value: dev
  EC2Instance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName:
        Ref: KeyName
      InstanceType: t3.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      AvailabilityZone: us-east-1a
      ImageId: ami-0a0d7666aecd99093
      Tags:
        - Key: Name
          Value: boundary-2-dev
        - Key: service-type
          Value: database
        - Key: application
          Value: dev
  EC2Instance3:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName:
        Ref: KeyName
      InstanceType: t3.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      AvailabilityZone: us-east-1a
      ImageId: ami-0a0d7666aecd99093
      Tags:
        - Key: Name
          Value: boundary-3-production
        - Key: service-type
          Value: database
        - Key: application
          Value: production
  EC2Instance4:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName:
        Ref: KeyName
      InstanceType: t3.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      AvailabilityZone: us-east-1a
      ImageId: ami-0a0d7666aecd99093
      Tags:
        - Key: Name
          Value: boundary-4-production
        - Key: service-type
          Value: database
        - Key: application
          Value: prod
  EC2Instance5:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName:
        Ref: KeyName
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      AvailabilityZone: us-east-1a
      ImageId: ami-0a0d7666aecd99093
      Tags:
        - Key: Name
          Value: boundary-worker
        - Key: service-type
          Value: worker
        - Key: cloud
          Value: aws
      UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -e
            
            sudo yum install -y yum-utils shadow-utils
            sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
            sudo yum -y install boundary-enterprise
            
            boundary version
            
            sudo mkdir /boundary-worker
            sudo mkdir /boundary-worker/config
            sudo mkdir /boundary-worker/logs
            sudo mkdir -p /boundary-worker/auth/nodecreds
            sudo chmod -R a+rwx /boundary-worker
            
            metadata_token=$(curl --request PUT "http://169.254.169.254/latest/api/token" --header "X-aws-ec2-metadata-token-ttl-seconds: 3600")
            instance_metadata=$(curl -s http://169.254.169.254/latest/meta-data/ --header "X-aws-ec2-metadata-token: $metadata_token")
            public_ip=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4 --header "X-aws-ec2-metadata-token: $metadata_token")
            
            cat > /home/ec2-user/config.hcl <<- EOF
            disable_mlock = true
            hcp_boundary_cluster_id = "YOUR_HCP_CLUSTER_ID"
            
            listener "tcp" {
              address     = "0.0.0.0:9202"
              purpose     = "proxy"
              tls_disable = true
            }
            
            worker {
              public_addr = "$public_ip:9202"
              auth_storage_path = "/boundary-worker/auth"
              tags {
                service-type = ["worker"],
                cloud = ["aws"]
              }
            }
            EOF
            
            sudo mv /home/ec2-user/config.hcl /boundary-worker/config/config.hcl
            cat /boundary-worker/config/config.hcl

            cat > /etc/systemd/system/boundary-worker.service <<- EOF
            [Unit]
            Description=boundary worker
            
            [Service]
            ExecStart=/usr/bin/boundary server -config /boundary-worker/config/config.hcl
            User=boundary
            Group=boundary
            LimitMEMLOCK=infinity
            CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
            SyslogIdentifier=boundary-worker
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            sudo chmod 755 /etc/systemd/system/boundary-worker.service
            sudo systemctl start boundary-worker.service
            sleep 5
            
            journalctl -xeu boundary-worker.service | grep -o "Worker Auth Registration Request:".* | awk '{print $5}' > /boundary-worker/config/worker_auth_token
Outputs:
  InstanceId1:
    Description: Instance Id for Instance1
    Value: !Ref EC2Instance1
  InstanceId2:
    Description: Instance Id for Instance2
    Value: !Ref EC2Instance2
  InstanceId3:
    Description: Instance Id for Instance3
    Value: !Ref EC2Instance3
  InstanceId4:
    Description: Instance Id for Instance4
    Value: !Ref EC2Instance4
  InstanceId5:
    Description: Instance Id for Instance5
    Value: !Ref EC2Instance5